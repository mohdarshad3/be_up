"use strict";angular.module("Admin",["ui.router","ngResource","myApp.constants","ngStorage","ngMessages","toastr","ui.bootstrap","angular-confirm","ngFileUpload","myApp.templates","underscore"]),angular.module("myApp.constants",[]).constant("CONFIG",{appName:"Sample MEAN",appTitle:"...",limit:20,offset:0,baseUrl:"http://localhost:1337/"}).value("version","1.0.0").constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",notAuthenticated:"auth-not-authenticated",alreadyAuthenticated:"auth-authenticated"}),angular.isUndefinedOrNull=function(val){return angular.isUndefined(val)||null===val},angular.module("Admin").config(function($stateProvider,$urlRouterProvider,$locationProvider,$httpProvider,CONFIG){$httpProvider.interceptors.push("httpInterceptor"),$urlRouterProvider.otherwise("/admin-dashboard"),$locationProvider.html5Mode(!0),$stateProvider.state("admin-login",{url:"/admin",templateUrl:CONFIG.baseUrl+"views/admin/admin/login.html",controller:"authCtrl",data:{freeRoute:!0}}).state("admin-forgot-password",{url:"/admin-forgot-password",templateUrl:"views/admin/admin/forgot-password.html",controller:"authCtrl",data:{freeRoute:!0}}).state("admin-password-reset",{url:"/admin-password-reset/:token",templateUrl:"views/admin/admin/password-reset.html",controller:"authCtrl",data:{freeRoute:!0}}).state("admin-dashboard",{url:"/admin-dashboard",templateUrl:"views/admin/admin/dashboard.html",controller:"authCtrl",data:{authenticatedRoute:!0}}).state("admin-list",{url:"/admin-list",templateUrl:"views/admin/admin/sentbox.html",controller:"adminCtrl",data:{authenticatedRoute:!0}}).state("admin-add",{url:"/admin-add",templateUrl:"views/admin/admin/add_bkp.html",controller:"adminCtrl",data:{authenticatedRoute:!0}}).state("admin-profile",{url:"/admin-profile",templateUrl:"views/admin/admin/admin-details.profile.html",controller:"authCtrl",data:{freeRoute:!0}}).state("admin-edit",{url:"/admin/:id/edit",templateUrl:"views/admin/admin/inbox.html",controller:"adminCtrl",data:{authenticatedRoute:!0}}).state("admin-email-config-edit",{url:"/admin-email-config-edit",templateUrl:"views/admin/admin/admin-email-config-inbox.html",controller:"adminCtrl",data:{authenticatedRoute:!0}}).state("admin-page-add",{url:"/admin-page-add",templateUrl:"views/admin/page/add-page.html",controller:"pageCtrl",data:{authenticatedRoute:!0}}).state("admin-page-edit",{url:"/admin/:id/page-edit",templateUrl:"views/admin/page/edit-page.html",controller:"pageCtrl",data:{authenticatedRoute:!0}}).state("admin-page-list",{url:"/admin-page-list",templateUrl:"views/admin/page/page-sentbox.html",controller:"pageCtrl",data:{authenticatedRoute:!0}})}).run(function($rootScope,$state,$stateParams,AUTH_EVENTS,dataService){$rootScope.isActive=function(stateName){return $state.includes(stateName)},$rootScope.$state=$state,$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){var isAuthenticated=dataService.isAuthenticated();if(!angular.isUndefinedOrNull(toState.data)){var isAuthAction=toState.data.authenticatedRoute===!0,isFreeAction=toState.data.freeRoute===!0;isAuthAction?isAuthenticated?$rootScope.$broadcast(AUTH_EVENTS.alreadyAuthenticated):($rootScope.$broadcast(AUTH_EVENTS.notAuthenticated),event.preventDefault()):isFreeAction&&isAuthenticated&&($rootScope.$broadcast(AUTH_EVENTS.alreadyAuthenticated),event.preventDefault())}})}),angular.module("Admin").factory("httpInterceptor",function($q,$location,$localStorage){return{request:function(config){return config.headers=config.headers||{},$localStorage.token&&(config.headers.Authorization=$localStorage.token),config},requestError:function(rejection){return $q.reject(rejection)},response:function(response){return response||$q.when(response)},responseError:function(rejection){return(401===rejection.status||403===rejection.status)&&$location.path("/login"),404===rejection.status&&$location.path("/"),$q.reject(rejection)}}}),angular.module("Admin").service("adminService",function($http,$q,$localStorage,Upload,CONFIG){return{signUp:function(data,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/signUp",data:data}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},getAdmin:function(page,callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/getAdminList/"+page}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},editAdmin:function(id,callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/"+id+"/edit"}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},updateAdmin:function(data,callback){Upload.upload({method:"POST",url:CONFIG.baseUrl+"admin/upload",data:data}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},deleteAdmin:function(id,callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/"+id+"/delete"}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},deleteMulti:function(ids,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/multiDelete",data:ids}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},multiStatusChange:function(ids,status,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/multiStatusChange/"+status,data:ids}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},changeStatusAdmin:function(id,status,callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/"+id+"/statusChange/"+status}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},getEmailConfigDetail:function(callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/emailConfigDetail"}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},updateEmailConfigDetail:function(data,callback){$http({method:"PUT",url:CONFIG.baseUrl+"admin/updateEmailConfigDetail",data:data}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})}}}),angular.module("Admin").service("dataService",function($http,$q,$localStorage,CONFIG){return{login:function(data,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/login",data:data}).success(function(result){$localStorage.token=result.token,callback(null,result)}).error(function(err){callback(!0,err)})},checkAuthStatus:function(callback){$http({method:"get",url:CONFIG.baseUrl+"admin/authenticate"}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},forgotPassword:function(formData,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/forgotPassword",data:formData}).success(function(result){callback(null,result)}).error(function(err){callback(err)})},verifyToken:function(token,callback){$http({method:"get",url:CONFIG.baseUrl+"admin/verifyForgotToken/"+token}).success(function(result){callback(null,result)}).error(function(err){callback(err)})},changePassword:function(formData,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/changePassword",data:formData}).then(function(result){callback(null,result)},function(err){callback(err)})},logout:function(){delete $localStorage.token},isAuthenticated:function(){return""===$localStorage.token||void 0===$localStorage.token?!1:!0},getToken:function(){return $localStorage.token}}}),angular.module("Admin").service("pageService",function($http,$q,$localStorage,Upload,CONFIG){return{addPage:function(data,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/addPage",data:data}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},getPage:function(page,callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/getPagesList/"+page}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},editPage:function(id,callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/"+id+"/editPage"}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},updatePage:function(data,callback){Upload.upload({method:"POST",url:CONFIG.baseUrl+"admin/updatePage",data:data}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},deletePage:function(id,callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/"+id+"/deletePage"}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},deleteMultiPage:function(ids,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/multiDeletePage",data:ids}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},multiStatusChange:function(ids,status,callback){$http({method:"POST",url:CONFIG.baseUrl+"admin/multiStatusChangePage/"+status,data:ids}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})},changeStatusAdmin:function(id,status,callback){$http({method:"GET",url:CONFIG.baseUrl+"admin/"+id+"/statusChangePage/"+status}).success(function(result){callback(null,result)}).error(function(err){callback(!0,err)})}}}),angular.module("Admin").controller("adminCtrl",function($scope,toastr,$state,adminService,CONFIG,$stateParams,$confirm,_){$scope.fromData={},$scope.user={};var selectedCheckbox=[];$scope.results={},$scope.doSignUp=function(){adminService.signUp($scope.fromData,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin added Successfully","Success"),$state.go("admin-list"))})},$scope.currentPage=1,$scope.setPage=function(pageNo){$scope.currentPage=pageNo},$scope.setItemsPerPage=function(){$scope.itemsPerPage=CONFIG.limit,$scope.currentPage=1},$scope.getAdminList=function(){adminService.getAdmin($scope.currentPage,function(err,data){err?toastr.error(data.message,"Error"):($scope.itemsPerPage=CONFIG.limit,$scope.totalItems=data.total,$scope.results=data.docs)})},$scope.editAdmin=function(){$scope.id=$stateParams.id?$stateParams.id:null,adminService.editAdmin($scope.id,function(err,result){err?toastr.error(result.message,"Error"):$scope.fromData=result.data})},$scope["delete"]=function(id){$confirm({text:"Are you sure you want to delete?"}).then(function(){adminService.deleteAdmin(id,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin has been deleted Successfully","Success"),$scope.getAdminList())})})},$scope.statusChange=function(id,status){$confirm({text:"Are you sure you want to change status?"}).then(function(){adminService.changeStatusAdmin(id,status,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin status has been changes Successfully","Success"),$scope.getAdminList())})})},$scope.updateAdmin=function(){adminService.updateAdmin($scope.fromData,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin updated Successfully","Success"),$state.go("admin-list"))})},$scope.allNeedsClicked=function(){var newValue=!$scope.allNeedsMet();_.each($scope.results,function(todo){todo.id=todo._id,todo.done=newValue})},$scope.allNeedsMet=function(){selectedCheckbox=[];var needsMet=_.reduce($scope.results,function(memo,todo){return todo.done?selectedCheckbox.push(todo._id):delete selectedCheckbox[todo._id],memo+(todo.done?1:0)},0);return $scope.selected=needsMet,needsMet===$scope.results.length},$scope.deleteMulti=function(){$confirm({text:"Are you sure you want to delete?"}).then(function(){adminService.deleteMulti(selectedCheckbox,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin deleted Successfully","Success"),$scope.getAdminList())})})},$scope.multiStatusChange=function(status){$confirm({text:"Are you sure you want to change status?"}).then(function(){adminService.multiStatusChange(selectedCheckbox,status,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin status has been changes Successfully","Success"),$scope.getAdminList())})})},$scope.emailConfigDetail=function(){adminService.getEmailConfigDetail(function(err,result){err?toastr.error(result.message,"Error"):$scope.fromData=result.data})},$scope.updateEmailConfigDetail=function(){adminService.updateEmailConfigDetail($scope.fromData,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Email Config Detail Updated Successfully","Success"),$state.go("admin-email-config-edit"))})},$scope.toggleSwitch=function(status){null===$scope.fromData?$scope.fromData={SMTP_status:status}:$scope.fromData.SMTP_status=status}}),angular.module("Admin").controller("authCtrl",function($scope,toastr,$localStorage,$rootScope,$location,$state,$stateParams,dataService,AUTH_EVENTS){$scope.userLoggedIn=!1,$scope.fromData={},$scope.doLogin=function(){dataService.login($scope.fromData,function(err,data){err?toastr.error(data.message,"Error"):($rootScope.$broadcast(AUTH_EVENTS.loginSuccess),$state.go("admin-dashboard"))})},$scope.doForgotPassword=function(){dataService.forgotPassword($scope.fromData,function(err,data){err?(console.log(err.message),toastr.error(err.message,"Error")):(toastr.success("Password reset mail has been sent successfully.","Success"),$state.go("admin-login"))})},$scope.doSignUp=function(){console.log($scope.fromData),dataService.signUp($scope.fromData,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin added Successfully","Success"),$state.go("admin-manage"))})},$scope.adminList=function(){console.log("admin list"),$scope.List={},dataService.adminList(function(err,data){err?(console.log(err),toastr.error(err.message,"Error")):$scope.List=data})},$scope.adminProfile=function(){console.log("admin list"),$scope.profileTab="active",$scope.editProfileTab="inactive"},$scope.profileTab=function(){$scope.profileTab="active",$scope.editProfileTab="inactive"},$scope.editProfileTab=function(){$scope.profileTab="inactive",$scope.editProfileTab="active"}}),angular.module("Admin").controller("mainCtrl",function($scope,$rootScope,$location,$state,$localStorage,CONFIG,dataService,AUTH_EVENTS,$timeout){$scope.appName=CONFIG.appName,$scope.userLoggedIn=!1,$scope.logout=function(){dataService.logout(),$scope.userLoggedIn=!1,$state.go("admin-login")},$scope.signInSuccessful=function(){$scope.userLoggedIn=!0},$scope.notLoggedIn=function(){$scope.userLoggedIn=!1,$state.go("admin-login")},$scope.navigateDashboard=function(){$scope.userLoggedIn=!0},$rootScope.$on(AUTH_EVENTS.notAuthenticated,$scope.notLoggedIn),$rootScope.$on(AUTH_EVENTS.loginSuccess,$scope.signInSuccessful),$rootScope.$on(AUTH_EVENTS.alreadyAuthenticated,$scope.navigateDashboard)}),angular.module("Admin").controller("pageCtrl",function($scope,toastr,$state,pageService,CONFIG,$stateParams,$confirm,_){$scope.fromData={},$scope.user={};var selectedCheckbox=[];$scope.showToolbar=!0,$scope.toggle=function(){$scope.showToolbar=!$scope.showToolbar},$scope.results={},$scope.doAddPage=function(){pageService.addPage($scope.fromData,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin added Successfully","Success"),$state.go("admin-list"))})},$scope.currentPage=1,$scope.setPage=function(pageNo){$scope.currentPage=pageNo},$scope.setItemsPerPage=function(){$scope.itemsPerPage=CONFIG.limit,$scope.currentPage=1},$scope.getPageList=function(){pageService.getPage($scope.currentPage,function(err,data){err?toastr.error(data.message,"Error"):($scope.itemsPerPage=CONFIG.limit,$scope.totalItems=data.total,$scope.results=data.docs)})},$scope.editPage=function(){$scope.id=$stateParams.id?$stateParams.id:null,pageService.editPage($scope.id,function(err,result){err?toastr.error(result.message,"Error"):$scope.fromData=result.data})},$scope.deletePage=function(id){$confirm({text:"Are you sure you want to delete?"}).then(function(){pageService.deletePage(id,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin has been deleted Successfully","Success"),$scope.getAdminList())})})},$scope.statusChangePage=function(id,status){$confirm({text:"Are you sure you want to change status?"}).then(function(){pageService.changeStatusPage(id,status,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin status has been changes Successfully","Success"),$scope.getAdminList())})})},$scope.updatePage=function(){pageService.updatePage($scope.fromData,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin updated Successfully","Success"),$state.go("admin-list"))})},$scope.allNeedsClicked=function(){var newValue=!$scope.allNeedsMet();_.each($scope.results,function(todo){todo.id=todo._id,todo.done=newValue})},$scope.allNeedsMet=function(){selectedCheckbox=[];var needsMet=_.reduce($scope.results,function(memo,todo){return todo.done?selectedCheckbox.push(todo._id):delete selectedCheckbox[todo._id],memo+(todo.done?1:0)},0);return $scope.selected=needsMet,needsMet===$scope.results.length},$scope.deleteMulti=function(){$confirm({text:"Are you sure you want to delete?"}).then(function(){pageService.deleteMultiPage(selectedCheckbox,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin deleted Successfully","Success"),$scope.getAdminList())})})},$scope.multiStatusChange=function(status){$confirm({text:"Are you sure you want to change status?"}).then(function(){pageService.multiStatusChangePage(selectedCheckbox,status,function(err,data){err?toastr.error(data.message,"Error"):(toastr.success("Admin status has been changes Successfully","Success"),$scope.getAdminList())})})}}),angular.module("Admin").directive("footer",function($state,$window,$timeout){return{templateUrl:"views/directives/header.html",replace:!0,link:function(scope,element,attr){}}});